//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FormProject.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ClaimFormEntities : DbContext
    {
        public ClaimFormEntities()
            : base("name=ClaimFormEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Notice> Notices { get; set; }
        public virtual DbSet<Position> Positions { get; set; }
        public virtual DbSet<Process> Processes { get; set; }
        public virtual DbSet<ProcessList> ProcessLists { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Claim> Claims { get; set; }
        public virtual DbSet<NewestClaim> NewestClaims { get; set; }
        public virtual DbSet<TypeNG> TypeNGs { get; set; }
        public virtual DbSet<Area> Areas { get; set; }
        public virtual DbSet<ODI> ODIs { get; set; }
        public virtual DbSet<TargetPPM> TargetPPMs { get; set; }
    
        public virtual ObjectResult<Nullable<int>> Pro_NumberWaitMe(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Pro_NumberWaitMe", userIdParameter);
        }
    
        public virtual ObjectResult<proc_list_claim_Result> proc_list_claim(Nullable<int> start, Nullable<int> end)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_list_claim_Result>("proc_list_claim", startParameter, endParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_list_claim_count(string filter, string userId)
        {
            var filterParameter = filter != null ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_list_claim_count", filterParameter, userIdParameter);
        }
    
        public virtual ObjectResult<proc_list_claim_page_Result> proc_list_claim_page(Nullable<int> start, Nullable<int> end, string filter, string userId)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_list_claim_page_Result>("proc_list_claim_page", startParameter, endParameter, filterParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_search_claim(string search, string filter, string userId)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_search_claim", searchParameter, filterParameter, userIdParameter);
        }
    }
}
